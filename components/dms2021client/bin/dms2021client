#!/usr/bin/env python3

import time
from getpass import getpass
from dms2021client.data.config import ClientConfiguration
from dms2021client.data.rest import AuthService
from dms2021client.data.rest import SensorService
from dms2021client.data.rest.exc import InvalidCredentialsError, UnauthorizedError
from dms2021client.presentation.menuOpciones import menuDeOpciones
from dms2021client.presentation.logoutService import  Exit

class LanzadorCliente():
    __sesion_id: str
    __username: str
    __auth_service: AuthService
    __cfg: ClientConfiguration
    __sensor_service: SensorService

    def __init__(self):
        print("¡¡BIENVENIDO!!")
        print("El programa se está iniciando")
        self.__cfg= ClientConfiguration()
        self.__cfg.load_from_file(self.__cfg.default_config_file())
        self.__auth_service = AuthService(self.__cfg.get_auth_service_host(), self.__cfg.get_auth_service_port())
        self.__sesion_id, self.__username = self.login()

        while True:
            salida_pantalla = menuDeOpciones()
            respuesta = salida_pantalla.menu()

            if respuesta == 0:
                salir_programa = Exit(self.__sesion_id, self.__auth_service)
                if(salir_programa.exitPagina() == -1):
                    break
            elif respuesta == 1:
                self.crearUsuario()
            elif respuesta == 3:
                print("\nObteniendo los valores....")
                self.llamarSensores()

    def crearUsuario(self):
        print("\nNEW USER -->")
        username: str = input('\tUsername: ')
        password: str = getpass('\tPassword: ')
        self.__auth_service.newUser(username, password, self.__sesion_id)
        return 

    def llamarSensores(self):
        print("Escoja el tipo de sensor a consultar (por ahora solo funciona el sensor 1, proximas actualizaciones en enero de 2021)")
        print("[1] Sensor memoria RAM")
        print("[2] Sensor memoria Swap")
        print("[3] Sensor peso archivo")
        respuesta = str(input("Escoge el sensor que desees: "))
        self.__sensor_service = SensorService(self.__cfg.get_sensor_service_host(),self.__cfg.get_sensor_service_port())
        if(self.__sensor_service.is_running() == True):
            print("Se inicia correctamente")
        else:
            print("La has cagado cahval")
        self.__sensor_service.create_sensor(respuesta)
        return 

    def login(self):
        while not self.__auth_service.is_running():
            time.sleep(1)
        print("\nAuthentication service up!")

        print("LOGIN -->")
        username: str = input('\tUsername: ')
        password: str = getpass('\tPassword: ')
        try:
            self.__session_id: str = self.__auth_service.login(username, password)
            self.__username = username
            print('Logged in successfully as ' + username + ' . Session id: ' + self.__session_id)
        except InvalidCredentialsError:
            print('Wrong username and/or password. Try again.')
            self.__sesion_id, self.__username = self.login()
        except Exception as ex:
            print(ex)
        
        return self.__session_id, self.__username

LanzadorCliente()
